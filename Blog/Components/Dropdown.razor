@typeparam T

<div class="dropdown shadow">
    <button class="btn btn-secondary dropdown-toggle show" data-bs-toggle="dropdown">
        @if (SelectedItem != null)
        {
            @(SelectedItemTemplate == null ? SelectedItem.ToString() : SelectedItemTemplate(SelectedItem))
        }
    </button>
    <ul class="dropdown-menu">
        @foreach (var item in Items)
        {
            <li class="dropdown-item" @onclick="@(async () => await OnItemSelectedAsync(item))">
                @(ItemTemplate == null ? item?.ToString() : ItemTemplate(item))
            </li>
        }
    </ul>
</div>

@code
{
    [Parameter, EditorRequired]
    public required IEnumerable<T> Items { get; init; }

    [Parameter]
    public T? SelectedItem { get; set; }

    [Parameter]
    public EventCallback<T> SelectedItemChanged { get; init; }

    [Parameter]
    public RenderFragment<T>? SelectedItemTemplate { get; init; }

    [Parameter]
    public RenderFragment<T>? ItemTemplate { get; init; }

}
